---
- hosts: localhost

  tasks:
    - name: Include vars from ansible directory
      include_vars:
        dir: "{{ playbook_dir }}/ansible/vars"
        extensions:
          - yaml
          - yml
      tags:
        - always

    - name: Install certificate handling for darwin
      shell: "sh '/Applications/Python\ {{ansible_python.version.major}}.{{ansible_python.version.minor}}/Install\ Certificates.command'"
      when:
        - ansible_system == 'Darwin'
      tags:
        - pip

    - name: Install packages
      package:
        name: "{{ packages.system }}"
        state: present
      when:
        - ansible_system == 'Linux'
      become: yes

    - name: Installing pip packages
      pip:
        name: "{{ packages.pip }}"
        state: latest
        extra_args: --user
      tags:
        - pip
        - update

    - name: "Link .zshrc file"
      file:
        src: "{{ playbook_dir }}/.zshrc"
        dest: "{{ ansible_env.HOME }}/.zshrc"
        owner: "{{ ansible_effective_user_id | quote }}"
        group: "{{ ansible_effective_group_id | quote }}"
        state: link
      tags:
        - update

    - name: Clone git repos
      git:
        repo: "{{ item.repo }}"
        dest: "{{ item.dest }}"
        depth: 1
      loop: "{{ git_repos }}"
      tags:
        - update

    - name: Run fzf install script
      shell: "{{ git_path }}/github.com/junegunn/fzf/install --bin --64"
      tags:
        - commands
        - update

    - name: Ensure binary dirs exist
      file:
        path: "{{ binary_dir | default(ansible_env.HOME + '/.bins') }}"
        state: directory
        mode: u=rwx,g=rx,o=rx
      tags:
        - binaries
        - scripts
        - update

    - name: Downloading scripts
      get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dir }}/{{ item.name }}"
        mode: u=rwx,g=rx,o=rx
        owner: "{{ ansible_user_uid | quote }}"
        group: "{{ ansible_user_gid | quote }}"
      register: base_script_downloads
      when: item.url is defined
      loop: "{{ scripts }}"
      tags:
        - scripts
        - commands
        - update

    - name: Exec gimme
      shell: eval "$(gimme stable)"
      tags:
        - commands
        - scripts
        - binaries
        - updates

    - name: Exec commands
      command: "{{ item.cmd }}"
      args:
        chdir: "{{ item.dir | default('.') }}"
      loop: "{{ commands }}"
      tags:
        - commands

    - include_tasks: "{{ ansible_env.PWD }}/ansible/get-latest-release-from-github.yaml"
      with_items: "{{ bin_downloads }}"
      tags:
        - binaries
        - update

    - name: Set the default shell to zsh
      user:
        name: "{{ ansible_user_id }}"
        shell: /bin/zsh
