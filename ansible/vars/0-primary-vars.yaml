# ------------
# Strings
bins_dir: "{{ ansible_env.HOME }}/.bins"
git_path: "{{ ansible_env.HOME }}/git"
github_path: "{{ git_path }}/github.com"
dotfiles_path: "{{ github_path }}/reynn/dotfiles"

file_links:
  - src: "{{ dotfiles_path }}/.zshrc"
    dest: "{{ ansible_env.HOME }}/.zshrc"
  - src: "{{ dotfiles_path }}/git/gitconfig"
    dest: "{{ ansible_env.HOME }}/.gitconfig"
  - src: "{{ dotfiles_path }}/.zshenv"
    dest: "{{ ansible_env.HOME }}/.zshenv"

# ------------
# Maps
packages:
  system:
    - zsh
    - git
    - curl
    - wget
    - tmux
    - neovim
  pip:
    - certifi
    - httpie
    - pipenv
    - docker
  cargo:
    - exa
    - ripgrep
  brew:
    - tmux
    - zsh
    - neovim

# ------------
# Lists
# TODO: Add ability to pull pre-releases
bin_downloads:
  - repository: PowerShell/PowerShell
    description: PowerShell for every system!
  - repository: wercker/stern
    description: K8s logging helper
  - repository: stedolan/jq
    description: CLI JSON processor
    platform: "{{ (ansible_system == 'Linux') | ternary('linux64','amd64') }}"
  - repository: mikefarah/yq
    description: yq is a portable command-line YAML processor
  - repository: derailed/k9s
    description: Kubernetes CLI To Manage Your Clusters In Style!
  - repository: sharkdp/bat
    description: A cat(1) clone with wings
  - repository: goodwithtech/dockle
    description: Container Image Linter for Security
  - repository: sharkdp/fd
    description: A simple, fast and user-friendly alternative to 'find'
  - repository: goreleaser/goreleaser
    description: Deliver Go binaries as fast and easily as possible
  - repository: helm/helm
    description: Kubernetes Workstation Tools CLI
  - repository: kubernetes/minikube
    description: Run Kubernetes locally
  - repository: starship/starship
    description: The cross-shell prompt for astronauts
  - repository: github/hub
    description: A command-line tool that makes git easier to use with GitHub

docker_images:
  - name: fantia.jp
    source: build
    build:
      pull: yes
      path: "{{ dotfiles_path }}/docker/fantia.jp"
  - name: pixiv
    source: build
    build:
      pull: yes
      path: "{{ dotfiles_path }}/docker/pixiv"
  - name: yiff.party
    source: build
    build:
      pull: yes
      path: "{{ dotfiles_path }}/docker/yiff.party"

# Ignoring errors on personal repos so we can proceed when there are local changes
git_repos:
  - repo: git@github.com:reynn/dotfiles.git
    dest: "{{ dotfiles_path }}"
    ignore_errors: yes
  - repo: git@github.com:reynn/k8s.git
    dest: "{{ github_path }}/reynn/k8s"
    ignore_errors: yes
  - repo: git@github.com:reynn/k8s-ops.git
    dest: "{{ github_path }}/reynn/k8s-ops"
    ignore_errors: yes
  - repo: git@github.com:thecasualcoder/kube-fzf.git
    dest: "{{ github_path }}/thecasualcoder/kube-fzf"
  - repo: git@github.com:mbadolato/iTerm2-Color-Schemes.git
    dest: "{{ github_path }}/mbadolato/iterm2-color"
  - repo: git@github.com:powerline/fonts.git
    dest: "{{ github_path }}/powerline/fonts"
  - repo: git@github.com:junegunn/fzf.git
    dest: "{{ github_path }}/junegunn/fzf"
    handler: "Run fzf install script"
  - repo: git@github.com:pyenv/pyenv.git
    dest: "{{ github_path }}/pyenv/pyenv"
  - repo: git@github.com:VundleVim/Vundle.vim.git
    dest: "{{ ansible_env.HOME }}/.vim/bundle/Vundle.vim"

commands:
  - cmd: "go build -o {{ bins_dir }}/helpers main.go"
    dir: "{{ dotfiles_path }}/go/helpers"
  - cmd: "sh /tmp/antibody -b {{ bins_dir }}"

scripts:
  - name: gimme
    url: https://raw.githubusercontent.com/travis-ci/gimme/master/gimme
    dir: "{{ bins_dir }}"
  - name: antibody
    url: https://git.io/antibody
    dir: /tmp
  - name: nvm
    url: https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh
    dir: "{{ bins_dir }}"
